# LEETCODE ANSWER FOR 3SUM 
#solving problem using 2 pointers .
class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        list_answers=set()
        nums.sort()                                                                 #sorting list before using 2 pointers approach 
        for i in range(0,len(nums)-2):
            if(i!=0 and nums[i]==nums[i-1]):                                       # removing duplicate for i index
                continue
            target=-nums[i]
            j=i+1
            k=len(nums)-1
            while(j<k):
                if(nums[j]+nums[k]==target):                                    
                    list_answers.add(tuple([nums[i],nums[j],nums[k]]))
                    j+=1
                    k-=1
                    while(j<k and nums[j]==nums[j-1]):                                     #removing duplicates for j index 
                        j+=1
                    while(j<k and (k!=len(nums)-1) and nums[k]==nums[k+1]):               #removing duplicates for k index
                        k-=1
                elif(nums[j]+nums[k]>target):
                    k-=1
                else:
                    j+=1
        return(list(list_answers))
